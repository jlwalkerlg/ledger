import type { InterestRateType } from '@/models/interest-rates'

export const addPercentage = (value: number, percentage: number) => value * (1 + percentage / 100)
export const percentageOf = (value: number, percentage: number) => (value * percentage) / 100

// periodsPerYear is the number of times the interest is compounded per year
// e.g. 12 for monthly, 4 for quarterly, 1 for annual
const aerToPeriodic = (aer: number, periodsPerYear: number) =>
  (Math.pow(1 + aer / 100, 1 / periodsPerYear) - 1) * 100

const aerToMonthly = (aer: number) => aerToPeriodic(aer, 12)

export const getMonthlyInterestRatePercentage = (
  annualRatePercentage: number,
  interestType: InterestRateType,
) => {
  if (interestType === 'nominal') {
    return annualRatePercentage / 12
  }

  if (interestType === 'effective') {
    return aerToMonthly(annualRatePercentage)
  }

  throw new Error(`Unknown interest type: ${interestType}`)
}

export const getMonthlyLoanPayment = (
  loanAmount: number,
  annualInterestRatePercentage: number,
  interestRateType: InterestRateType,
  term: number,
) => {
  // Generated by Copilot!
  const monthlyInterestRate =
    getMonthlyInterestRatePercentage(annualInterestRatePercentage, interestRateType) / 100
  const totalPayments = term * 12
  const monthlyPayment =
    (loanAmount * monthlyInterestRate) / (1 - Math.pow(1 + monthlyInterestRate, -totalPayments))

  return monthlyPayment
}
